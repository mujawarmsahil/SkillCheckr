package com.example.demo.Controller;




import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import java.util.*;

import com.example.demo.Model.Student;
import com.example.demo.Model.Teacher;
import com.example.demo.Service.AdminService;

@RestController
@RequestMapping("/api/Admin")
@CrossOrigin(origins = "http://localhost:5173")
public class AdminController {
	
	
	@Autowired
	public AdminService adminService;
	
	
	@PostMapping("/addTeacher/{request_id}")
	public ResponseEntity<Object> addteacherwithid(@PathVariable Integer request_id){
		boolean b = adminService.addTeacherFromRequest(request_id);
		
		if(b) {
			
			return ResponseEntity.ok("Teacher added successfully");
		}
		else {
			return ResponseEntity.ok(false);	
		}
		}	
	
	
	@GetMapping("/viewAllTeacher")
	public ResponseEntity<?> viewAllTeacher(){
		List <Teacher> list = adminService.getAllTeacher();
		 
		if(list==null||list.isEmpty())
		{
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("No registration requests found.");
		}
		return ResponseEntity.ok(list);
	}
	
	
	
	@GetMapping("/viewAllStudent")
	public ResponseEntity<?> viewAllStudent() {
	    List<Student> list = adminService.getAllStudent();

	    if (list == null || list.isEmpty()) {
	        return ResponseEntity.status(HttpStatus.NOT_FOUND).body("No registration requests found.");
	    }
	    return ResponseEntity.ok(list);
	}
	@PostMapping("/addStudent/{request_id}")
	public ResponseEntity <Object> addStudentWithId(@PathVariable Integer request_id){ 
		
		boolean b = adminService.addStudentFromRequest(request_id);
		if(b) {
			 return ResponseEntity.ok("Student add SuccessFully ");
		}
		else {
			return ResponseEntity.ok(false);

		}
	}
	
	
	@DeleteMapping("/teacherDeleteById/{Teacher_id}")
	public ResponseEntity<String> deleteTeacher(@PathVariable Integer Teacher_id) {
	    boolean b = adminService.deleteTeacherbyId(Teacher_id);
	    if (b) {
	        return ResponseEntity.ok("Delete Successfully");
	    } else {
	        return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Some issue, data not deleted");
	    }
	}
	
	@DeleteMapping("/studentDelteteById/{Student_id}")
	public ResponseEntity<String> deleteStudent(@PathVariable Integer Student_id){
		
		boolean b = adminService.deleteStudentid(Student_id);
		if(b) {
			 return ResponseEntity.ok("Delete Succefully ");
		}
		else {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("some issue, data not deleted");
			
		}
		
	}

	
	
	

//	
	
	
	
}